Xbox games are shipped on DVDs. They are commonly referred to as Xbox Game Discs (XGD).

== Visible information on ring ==

'''The DVD inner ring usually contains:'''

(The examples are from a German [[FIFA Soccer 2003]] disc)

An outer portion with labels:
* Outer ring Layer 1
** Code 39 Barcode of the the Mastering Code (*EA02302E L1*)
** Text for Mastering code ("EA02302E L1 02 0MM", where "02" is a smaller font and slightly higher than the previous baseline, followed by "0MM" on the original baseline)
** Mastering SID Code ("IFPI L126")
* Inner ring for Layer 0
** Code 39 Barcode of the the Mastering Code (*EA02302E L0*)
** Text for Mastering code ("EA02302E L0 06", where "06" is a smaller font and slightly higher than the previous baseline)
** Mastering SID Code ("IFPI L126")

An inner porition with Xbox logo:
* 3 times "XBOX" text with "X Logo" in the background on each side
* 1 time "XBOX" text with blank background
* 3 times "XBOX" text with "X Logo" in the background on each side
* Another tiny pattern with Xbox logo and some markings{{citation needed}} (opposite of the "XBOX" text without logo)

== Dumps ==

=== Files ===

==== Disc Manufacturing Information (DMI.bin) ====

2048 Bytes

READ DVD STRUCTURE with format 0x04

==== Physical Format Information (PFI.bin) ====

2048 Bytes
Read from the Lead-In.

READ DVD STRUCTURE with format 0x00

==== Security Sectors (SS.bin) ====

Challenge entry (11 Bytes):

{| class="wikitable"
! Offset !! Type !! Field !! Notes
|-
|0 || u8 || Valid || Always 1 if the challenge is valid, else the challenge is ignored
|-
|1 || u8 || Challenge id ||
|-
|2 || u32 || Challenge value ||
|-
|6 || u8 || Response modifier || multimedia.cx says this might be a Response id. However, it's always 0 anyway?!
|-
|7 || u32 || Response value ||
|}

Security sector range (9 Bytes)

{| class="wikitable"
! Offset !! Type !! Field !! Notes
|-
|3 || u24 || Start PSN ||
|-
|6 || u24 || End PSN ||
|}

Unknown1 (320 Bytes)

{| class="wikitable"
! Offset !! Type !! Field !! Notes
|-
|0 || u64 || || Yet another timestamp?! (Similar to 1183 in complete format)
|-
|8 || u32 || || Unknown
|-
|27 || u8 || || Unknown
|-
|28 || u8[16] || || Unknown
|-
|44 || u8[20] || || Unknown
|-
|64 || u8[256] || || Unknown
|}

Complete format (2048 Bytes):

{| class="wikitable"
! Offset !! Type !! Field !! Notes
|-
|0 || PFI || Physical Format Information || PFI for the actual data, unknown size
|-
|720 || u32 || Unknown ||
|-
|768 || u8 || Version of challenge table || Always 1
|-
|769 || u8 || Number of challenge entries || Always 23
|-
|770 || Challenge entry[] || Encrypted challenge entries ||
|-
|1055 || u64 || || Some large number timestamp?
|-
|1083 || u8[16] || || Unknown
|-
|1183 || Unknown1 || || Unknown, 44 bytes SHA-1 hash are generated here to be used as RC4 key to decrypt challenge entries
|-
|1503 || Unknown1 || || Unknown
|-
! colspan="4" | End of data readable by a stock Xbox drive (1632 Bytes)
|-
|1632 || u8 || Number of security sector ranges || Always 23
|-
|1633 || Security sector range[] || Security sector ranges || Only 16 of which are used.
|-
|1840 || Security sector range[] || Security sector ranges || Only 16 of which are used. <br> ''(Copy from Offset 1633)''
|}

All other fields are assumed to be zero!

===== Decryption of challenge entries =====

Starting at offset 1183, a 44 byte SHA-1 hash is generated.
The resulting hash - the first part of it, to be exact - is fed as the key into RC4 decryption. The output of SHA-1 contains 160 bits of information. 160 / 8 = 20 bytes of information. To express this as a printable hex digest requires 40 characters. The SHA-1 hash is converted to a hex digest and then the first 7 of the characters are fed into the RC4 initialization function as the key. Then, the RC4 decrypter does its work on the 253 Bytes of the challenge entries (Offset 770).

There'll only be a handful of valid entries in the challenge entries.
However there'll be at least 2.

=== Dumping ===

To dump Xbox Game Discs you need one of the following drives / firmwares:

{| class="wikitable"
!Drive
!Standard
!Original Firmware download
!Name of modified Firmware for dumping
|-
|{{citation needed}}
|
|
|0800
|-
|Toshiba SD-M2012C
|IDE
|
|Kreon{{citation needed}}
|-
|Samsung SH-D162C
|IDE
|
|SB00 Kreon 0.60 (July 30th 2006) <br> SB00 Kreon 0.80 (September 9th 2006) <br> SB01 Kreon 1.00 (October 9th 2007)
|-
|Samsung SH-D162D
|IDE
|[https://web.archive.org/web/20090601193905/http://www.samsungodd.com:80/korlib/download.asp?no=&fname=200706281644411972_SH-D162D_SB00.bin&path=/UploadFiles/FW/FWDOWNLOAD/ENG/ SB00] <br> [https://web.archive.org/web/20090916202345/http://www.samsungodd.com:80/korlib/download.asp?no=&fname=200811051941150901_SH-D162D_SB01.exe&path=/UploadFiles/FW/FWDOWNLOAD/ENG/ SB01] <br> SB02{{citation needed}} <br> [https://web.archive.org/web/20090402052613/http://www.samsungodd.com:80/korlib/download.asp?no=&fname=200903191825218171_SH-D162D_SB03.exe&path=/UploadFiles/FW/FWDOWNLOAD/ENG/ SB03] <br> [https://web.archive.org/web/20120123040117/http://www.samsungodd.com:80/korlib/download.asp?no=&fname=200909281412336931_SH-D162D_SB04.exe&path=/UploadFiles/FW/FWDOWNLOAD/ENG/ SB04]
|SB00 Kreon 1.00 (November 18th 2007)
|-
|Toshiba TS-H352C
|IDE
|
|Kreon{{citation needed}}
|-
|Toshiba TS-H352D
|IDE
|
|Kreon{{citation needed}}
|-
|Samsung SH-D163A
|SATA
|
|SB01 Kreon 1.00 (October 9th 2007)
|-
|Samsung SH-D163B
|SATA
|
|Kreon 1.00 (November 18th 2007)
|-
|Toshiba TS-H353A
|SATA
|
|{{citation needed}}
|-
|Toshiba TS-H353B
|SATA
|
|{{citation needed}}
|}

Please note that the modified firmwares are based on copyrighted material and can therefore not be legally shared here.
Patch files to patch original firmwares into dumping-firmwares would be appreciated. 

Flashing software:

* TSDNMAC for MacOS
* [http://web.archive.org/web/20070301000000/http://www.samsungodd.com/KorLib/File/sfdnwin.exe SFDNWIN] for Microsoft Windows 2000 and XP
* TSDNWIN for Microsoft Windows Vista and 7
* Dell SFDNDOS and the newer TSDNDOS for Microsoft DOS

For current dumping instructions see [http://forum.redump.org/topic/6073/xbox-1-360-dumping-instructions/ the Dumping Guide by the Redump Project].

=== Xbox related commands ===

==== Enable Unlock 1 (xtreme) state ====

Supported by: Kreon 1.00
<pre>FF 08 01 01</pre>

Enable Unlock 1 (xtreme) state' as we already know it from the 360 xtreme modded drives. 
This command is supported for legacy reasons only. Custom applications should use the new 'Set Lock State' instead.

==== Set Lock State ====

Supported by: Kreon 1.00
<pre>FF 08 01 11 xx</pre>

* <code>xx=00</code> - Drive locked (no unlock state)
* <code>xx=01</code> - Unlock State 1 (xtreme) enabled
* <code>xx=02</code> - Unlock state 2 (wxripper) enabled

==== SS extract command ====

Supported by: Kreon 1.00
<pre>AD 00 FF 02 FD FF FE 00 08 00 xx C0</pre>

This is the well known  from the xtreme firmware.

==== Get Feature List ====

Supported by: Kreon 1.00
<pre>FF 08 01 10</pre>

This command will return a list of the additional features supported by the drive.
All values returned are 16 bit values, and the list is terminated with null (<code>0x0000</code>).
The two first words of the returned list always reads as <code>0xA55A 0X5AA5</code> in order to guarantee that a reply from a drive not supporting this command correctly isn't mistaken for a feature list.

An example feature list could be: <code>0xA55A, 0x5AA5, 0x0100, 0xF000, 0xF001, 0x0000</code>

This list would indicate that the drive supports XBOX360 Unlock 1, Lock and Error Skip, as it can be seen from the values defined below:

XBOX 360 related features:

* <code>0x0100</code> : The drive supports the unlock 1 state (xtreme)
* <code>0x0101</code> : The drive supports the unlock 2 state (wxripper)
* <code>0x0120</code> : The drive can read and decrypt the SS
* <code>0x0121</code> : The drive has full challenge response functionality

XBOX related features:

* <code>0x0200</code> : The drive supports the unlock 1 state (xtreme)
* <code>0x0201</code> : The drive supports the unlock 2 state (wxripper)
* <code>0x0220</code> : The drive can read and decrypt the SS
* <code>0x0221</code> : The drive has full challenge response functionality

General drive features:

* <code>0xF000</code> : The drive supports the lock (cancel any unlock state) command
* <code>0xF001</code> : The drive supports error skipping

This is the complete list of defined features at the moment. If you're working on a custom application you might want to contact me in order to get the latest list.

== References and links == 
* [https://web.archive.org/web/20150616131202/http://dark.ellende.eu/public/360DVDfirmwareRelatedInfo.pdf http://dark.ellende.eu/public/360DVDfirmwareRelatedInfo.pdf]
* [https://multimedia.cx/eggs/xbox-sphinx-protocol/ Overview of the challenge/response security protocol]
* [http://redump.org/discs/system/xbox/ Xbox Game Discs preserved by the Redump Project]
* [http://wiki.redump.org/index.php?title=Discs_not_yet_dumped#Microsoft_Xbox Missing Xbox Game Disc dumps at Redump Project]