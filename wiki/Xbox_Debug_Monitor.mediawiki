The '''Xbox Debug Monitor''' ('''XBDM''') is a feature of Xbox Development Kits that provides remote debugging, file management, console discovery, and other services on TCP/UDP port 731. It is loaded by debug kernels at startup from <code>C:\xbdm.dll</code> and its configuration is read from <code>E:\xbdm.ini</code>. XBDM is distinct from KD and uses a different wire protocol.

==Name Answering Protocol==

An Xbox Development Kit (XDK) can be assigned a ''debug name'' that identifies it on the local network. XBDM provides the ability to resolve a debug name to an IP address ([[#Forward Lookup|forward lookup]]), resolve an IP address to a debug name ([[#Reverse Lookup|reverse lookup]]), and [[#Console Discovery|discover]] all XDKs on the local network using a very simple UDP-based protocol.

{|class="wikitable" style="margin: 0 auto; text-align: center;"
|+Name Answering Protocol Packet
|-
! style="border-bottom:none; border-right:none;"| ''Offsets''
! style="border-left:none;"| Octet
! colspan="8" | 0
! colspan="8" | 1
|-
! style="border-top: none" | Octet
! Bit!!0!!1!!2!!3!!4!!5!!6!!7!!8!!9!!10!!11!!12!!13!!14!!15
|-
! 0
! 0
| colspan="8" | Type || colspan="8" | Name Length
|-
! 2
! 16+
| colspan="16" | Name
|}

A NAP packet contains 3 fields, the last of which is variable-length. The minimum length of a NAP packet is 2 bytes and the maximum is 257. Invalid packets are silently dropped by XBDM.

; Type
: This unsigned 8-bit field may contain the values 1 (lookup), 2 (reply), or 3 (wildcard).
; Name Length
: This unsigned 8-bit field specifies the length of the Name field and should be a value from 0 to 255. For Type 3 packets, this field should always be 0. For Type 1 and Type 2 packets, this field should never be 0.
; Name
: This variable-length field contains the ASCII-encoded debug name for Type 1 and Type 2 packets. The number of bytes in this field is given by the Length field. It should not contain any <code>NUL</code> characters.

===Forward Lookup===

To resolve a debug name to an IP address, send a Type 1 NAP packet containing the debug name to be resolved to UDP address 255.255.255.255:731. The XDK with that name will respond with a Type 2 NAP packet and its IP address can be retrieved from the UDP header. There is no way to prevent multiple XDKs being assigned the same debug name, so it's possible that the client may receive replies from multiple IP addresses.

===Reverse Lookup===

To resolve an IP address to a debug name, send a Type 3 NAP packet with no name (length 0) to the IP address on UDP port 731. Assuming the target is actually an XDK, it will respond with a Type 2 NAP packet containing its name. This is very similar to the Console Discovery process (below), except that by sending the wildcard packet to a single IP address, only that XDK will respond.

===Console Discovery===

To discover all XDKs on the local network, send a Type 3 NAP packet with no name (length 0) to the UDP address 255.255.255.255:731. Each XDK will respond with a Type 2 NAP packet containing its name. As with a forward lookup, the client may receive multiple replies with the same name, but different IP addresses.

==Remote Debugging and Control Protocol==

The Remote Debugging and Control Protocol (RDCP) is a text-based protocol transmitted over a TCP connection on port 731. RDCP resembles protocols like FTP and SMTP, making it possible to communicate with XBDM using just a Telnet client in many cases.

When a connection is established, XBDM sends <code>201- connected</code> (or <code>200- connected</code> in version 3944) followed by <CR><LF> (that is, a carriage return character followed by a line feed character). The RDCP client is then free to send a command followed by <CR><LF> or <CR><NUL>. A command consists of a name and zero or more parameters separated by whitespace characters. The format of the parameters is defined by the command, but most commands use the form <code>key=value</code>. Parameter values that contain whitespace characters must be surrounded by double quotes (e.g. <code>"some value"</code> or <code>key="some value"</code>).

After executing a command, XBDM replies with a response line consisting of a three-digit status code and message of the form <code>999- message text<CR><LF></code>. Note that unlike similar protocols, the <code>-</code> (dash) is always present in responses and messages cannot span multiple lines.

===Status codes===

In responses, 2xx status codes indicate success and 4xx codes indicate failure. Most codes have a default message, but some commands leave the message field empty while others use the message field to hold whatever data was requested by the client or additional information about an error.

====2xx Success====

; <span id="status_200">200- OK</span>
: Standard response for successful execution of a command.
; <span id="status_201">201- connected</span>
: Initial response sent after a connection is established. The client does not need to send anything to solicit this response.
; <span id="status_202">202- multiline response follows</span>
: The response line is followed by one or more additional lines of data terminated by a line containing only a <code>.</code> (period). The client must read all available lines before sending another command.
; <span id="status_203">203- binary response follows</span>
: The response line is followed by raw binary data, the length of which is indicated in some command-specific way. The client must read all available data before sending another command.
; <span id="status_204">204- send binary data</span>
: The command is expecting additional binary data from the client. After the client sends the required number of bytes, XBDM will send another response line with the final result of the command.
; <span id="status_205">205- connection dedicated</span>
: The connection has been moved to a dedicated handler thread (see [[#Connection dedication]]).

====4xx Failure====

; <span id="status_400">400- unexpected error</span>
: An internal error occurred that could not be translated to a standard error code. The message is typically more descriptive, such as "out of memory" or "bad parameter".
; <span id="status_401">401- max number of connections exceeded</span>
: The connection could not be established because XBDM is already serving the maximum number of clients (4).
; <span id="status_402">402- file not found</span>
: An operation was attempted on a file that does not exist.
; <span id="status_403">403- no such module</span>
: An operation was attempted on a module that does not exist.
; <span id="status_404">404- memory not mapped</span>
: An operation was attempted on a region of memory that is not mapped in the page table.
; <span id="status_405">405- no such thread</span>
: An operation was attempted on a thread that does not exist.
; <span id="status_406">406-</span>
: An attempt to set the system time with the <code>setsystime</code> command failed. This status code is undocumented.
; <span id="status_407">407- unknown command</span>
: The command is not recognized.
; <span id="status_408">408- not stopped</span>
: The target thread is not stopped.
; <span id="status_409">409- file must be copied</span>
: A move operation was attempted on a file that can only be copied.
; <span id="status_410">410- file already exists</span>
: A file could not be created or moved because one already exists with the same name.
; <span id="status_411">411- directory not empty</span>
: A directory could not be deleted because it still contains files and/or directories.
; <span id="status_412">412- filename is invalid</span>
: The specified file contains invalid characters or is too long.
; <span id="status_413">413- file cannot be created</span>
: The file cannot be created for some unspecified reason.
; <span id="status_414">414- access denied</span>
: The file cannot be accessed at the connection's current privilege level (see [[#Security]]).
; <span id="status_415">415- no room on device</span>
: The target device has run out of storage space.
; <span id="status_416">416- not debuggable</span>
: The title is not debuggable.
; <span id="status_417">417- type invalid</span>
: The performance counter type is invalid.
; <span id="status_418">418- data not available</span>
: The performance counter data is not available.
; <span id="status_420">420- box not locked</span>
: The command can only be executed when security is enabled (see [[#Security]]).
; <span id="status_421">421- key exchange required</span>
: The client must perform a key exchange with the <code>keyxchg</code> command (see [[#Security]]).
; <span id="status_422">422- dedicated connection required</span>
: The command can only be executed on a dedicated connection (see [[#Connection dedication]]).

===Connection dedication===

'''Connection dedication''' is the process of moving a client connection from the ''global server thread'' to a ''threaded command handler thread'' with the <code>dedicate</code> command.

By default, commands sent to XBDM are processed on the global server thread. Built-in commands and custom command handlers registered with <code>DmRegisterCommandProcessor</code> are run on this thread and may only execute kernel APIs. Commands that need to call CRT or XAPI functions must run in a threaded command handler, registered with <code>DmRegisterCommandProcessorEx</code> or <code>DmRegisterThreadedCommandProcessor</code>.

A client that has not dedicated its connection will receive a <code>422- dedicated connection required</code> response if it tries to execute a threaded command on the global server thread. After dedicating itself to a threaded command handler, the client can no longer send built-in or non-threaded commands until it re-dedicates itself to the global server thread.

===Security===

TODO

===Commands===

{| class="wikitable" style="margin: 0 auto; text-align: center;"
|+ Command availability by XBDM version
|- style="font-size: x-small"
!
! 3944
! 4039
! 4134
! 4242
! 4361
! 4432
! 4531
! 4627
! 4721
! 4831
! 4928
! 5028
! 5120
! 5233
! 5344
! 5455
! 5558
! 5659
! 5788
! 5849
! 5933
|-
| style="font-family: monospace; text-align: left" | altaddr
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | authuser
| style="background-color: #F2CECE" | ✗
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | break
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | bye
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
|-
| style="font-family: monospace; text-align: left" | capcontrol
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | continue
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | dbgname
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | debugger
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | debugmode
| style="background-color: #F2CECE" | ✗
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | deftitle
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | delete
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | dirlist
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | drivefreespace
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | drivelist
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | flash
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | fmtfat
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | funccall
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | getcontext
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | getextcontext
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | getfile
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | getfileattributes
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | getmem
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | getuserpriv
| style="background-color: #F2CECE" | ✗
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | go
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | gpucount
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | halt
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | irtsweep
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | isbreak
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | isstopped
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | kd
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | keyxchg
| style="background-color: #F2CECE" | ✗
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | lockmode
| style="background-color: #F2CECE" | ✗
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | magicboot
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | mkdir
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | modlong
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | modsections
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | modules
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | nostopon
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | notify
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | notifyat
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | pclist
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | pssnap
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | querypc
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | reboot
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | rename
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | resume
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | screenshot
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | sendfile
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | setconfig
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | setcontext
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | setfileattributes
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | setsystime
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | setuserpriv
| style="background-color: #F2CECE" | ✗
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | stop
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | stopon
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | suspend
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | systime
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | threadinfo
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | threads
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | title
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | user
| style="background-color: #F2CECE" | ✗
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | userlist
| style="background-color: #F2CECE" | ✗
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | vssnap
| style="background-color: #F2CECE" | ✗
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | xbeinfo
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|-
| style="font-family: monospace; text-align: left" | xtlinfo
| style="background-color: #CEF2E0" | ✓
| style="background-color: #CEF2E0" | ✓
| colspan=19 |
|- style="font-size: x-small"
!
! 3944
! 4039
! 4134
! 4242
! 4361
! 4432
! 4531
! 4627
! 4721
! 4831
! 4928
! 5028
! 5120
! 5233
! 5344
! 5455
! 5558
! 5659
! 5788
! 5849
! 5933
|}

TODO

==See Also==

* [[Xbox Neighborhood]] – An XDK tool that utilizes the XBDM protocols

==External Links==

* [https://bitbucket.org/remnantmods/yelo-neighborhood/ Yelo Neighborhood] – An open-source re-implementation of [[Xbox Neighborhood]] written in C#.
* [https://github.com/Ernegien/ViridiX ViridiX] – An open-source collection of Xbox debugging libraries and tools written in C#.
* [https://github.com/docbrown/xbdm-rs xbdm-rs] - An open-source XBDM client written in Rust.