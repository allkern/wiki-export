This is a list of known Xbox emulation projects

{| class="wikitable sortable"
!Status
!Approach
!Chihiro
!Name
!Links
!Initiator
!Platform
!License
!Notes

|-
|{{Maintained}}
|LLE
|{{Yes}}
|[[XQEMU]]
|[http://xqemu.com/][https://github.com/xqemu/][https://github.com/espes/xqemu]
|espes
|Windows/macOS/Linux/Others	
|
|XQEMU supports hardware-acceleration for the CPU emulation on Linux through KVM.

|-
|{{Maintained}}
|HLE/LLE Hybrid
|{{No}}
|[[Cxbx-Reloaded]]
|[http://cxbx-reloaded.co.uk/][https://github.com/Cxbx-Reloaded/Cxbx-Reloaded]
|SoullessSentinel
|Windows
|
|Cxbx-Reloaded supports LLE GPU emulation which was taken from XQEMU. At the time of writing, the LLE GPU is significantly slower than in XQEMU.

|-
|{{Dead}}
|LLE
|{{No}}
|Tortoise
|[https://gitlab.com/kvmbox-reloaded/]
|JayFoxRox, phire
|
|
|The decision was made to create an HLE / LLE Xbox emulation project which is maintained similar to Dolphin or Citra. A key focus was on design simplicity. The project started as a continuation of kvmbox, with devices being copied from the XQEMU source code. The project was called kvmbox-reloaded, while the name was being decided. The HLE portion was never worked on.

|-
|{{Dead}}
|LLE/HLE Hybrid
|{{No}}
|OpenXBOX
|[https://github.com/mborgerson/OpenXBOX]
|mborgerson
|
|
|

|-
|{{Dead}}
|HLE/LLE Hybrid
|{{No}}
|xexec
|
|[http://xboxdevwiki.net/User:Haxar Haxar]
|Linux
|
|Xexec is an Xbox executable loader & emulator for x86/x64 Linux; handles direct execution of x86 code, executing Xbox game code directly on the CPU, in userspace Linux; All Windows kernel calls from Xbox game code are translated into POSIX syscalls, with no dependency on Wine.

|-
|{{Dead}}
|LLE/HLE Hybrid
|{{No}}
|[https://github.com/blueshogun96/MacBox MacBox]
|[http://shogun3d-cxbx.blogspot.com/2017/01/the-macos-experiment-part-1.html][http://shogun3d-cxbx.blogspot.com/2017/01/around-beginning-of-new-year-i.html]
|blueshogun96
|macOS
|
|"The macOS Experiment" - An experimental VM for Macs that don't have support for the official VM framework. A simple proof of concept.

|-
|{{Maintained}}
|LLE/HLE Hybrid
|{{No}}
|viXen
|[https://github.com/StrikerX3/viXen]
|StrikerX3
|Windows/Linux
|
|A fork of OpenXBOX, which was turned into a separate project.

|-
|{{Dead}}
|HLE
|{{No}}
|[[Cxbx]]
|
|Caustik
|Windows
|
|
|-
|{{Dead}}
|HLE
|{{No}}
|Dxbx
|[http://dxbx-emu.com][https://github.com/PatrickvL/Dxbx/]
|ShadowTj
|Windows
|
|The project was started on March 23rd 2008. It is an improved port of Cxbx to the Delphi programming language.

|-
|{{Unknown}}
|Unknown
|{{No}}
|[https://github.com/impeachgod/Dirtbox Dirtbox]
|
|
|Windows
|
|
|-
|{{Unknown}}
|HLE
|{{No}}
|[https://sourceforge.net/p/ironbabel/code/HEAD/tree/trunk/Box/Xbox/ IronBabel]
|
|daeken
|Unknown
|
|This seems to have been a generic portability framework
|-
|{{Unknown}}
|HLE
|{{No}}
|[https://github.com/daeken/Steelbreeze Steelbreeze]
|
|daeken
|Unknown
|
|
|-
|{{Unknown}}
|LLE/HLE Hybrid
|{{No}}
|[https://github.com/daeken/Zookeeper Zookeeper]
|[https://www.reddit.com/r/EmuDev/comments/4isyvu/project_zookeeper_a_new_xbox_emulator/]
|daeken
|macOS
|
|Using Apple's Hypervisor.framework to run a custom kernel (NightBeliever in the repo) and then running Xbox code from there
|-
|{{Unknown}}
|Unknown
|{{No}}
|[http://ngemu.com/threads/.154342/ XbeNext]
|[https://github.com/LoveMHz/XBENext]
|LoveMHz
|Windows
|
|
|-
|{{Dead}}
|HLE
|{{No}}
|[http://ngemu.com/forums/.65/ Xeon]
|
|_SF_
|Windows
|
|
|-
|{{Unknown}}
|Unknown
|{{No}}
|[http://ngemu.com/threads/.105210/ XProject]
|
|
|Windows
|
|
|-
|{{Unknown}}
|Unknown
|{{No}}
|[https://code.google.com/p/xbem xbem]
|
|
|Windows
|
|
|-
|{{Dead}}
|LLE/HLE Hybrid
|{{Yes}}
|Hackbox
|
|JayFoxRox
|Windows/Linux
|Private
|This was originally going to be a commercial emulator (but plans were dropped quickly in favor of preservation). The source code was temporarily public but then made private. The source code is still available to a selected group of developers. Hackbox was designed from scratch but re-used code from Cxbx for HLE routine detection.
|-
|{{Unknown}}
|LLE
|{{No}}
|[https://github.com/phire/kvmbox kvmbox]
|
|phire
|Linux
|
|
|-
|{{Unknown}}
|HLE
|{{No}}
|[https://github.com/Gabriel-Maldonado/XboxHLE XboxHLE]
|
|
|Windows
|
|
|-
|{{Unknown}}
|Unknown
|{{No}}
|[https://github.com/bjh83/boombox boombox]
|
|
|Windows
|
|
|-
|{{Unknown}}
|Unknown
|{{No}}
|[https://github.com/docbrown/vxb vxb]
|
|
|Windows
|
|
|-
|{{Unknown}}
|Unknown
|{{No}}
|[https://github.com/quantumdude836/exciplex exciplex]
|
|
|Windows
|
|
|-
|{{Maintained}}
|LLE
|{{Yes}}
|[http://mamedev.org/ MAME]
|[http://adb.arcadeitalia.net/?mame=xbox][http://adb.arcadeitalia.net/?mame=chihiro][http://emulation.gametechwiki.com/index.php/MAME_compatibility_list#Xbox][http://emulation.gametechwiki.com/index.php/MAME_compatibility_list#Chihiro_Arcade]
|[https://github.com/mamedev/mame/commits?author=yz70s yz70s] (Samuele Zannoli) and MAME Team
|Windows/macOS/Linux/Others
|
|Focus seems to be on Chihiro emulation.
|-
|{{Dead}}
|LLE
|{{No}}
|[https://github.com/monocasa/xbvm XBVM]
|
|monocasa
|Linux
|
|
|-
|{{Dead}}
|
|{{No}}
|[http://xenoborg-emu.blogspot.com/ Xenoborg]
|
|blueshogun96
|Windows
|
|
|-
|{{Dead}}
|LLE/HLE Hybrid
|{{No}}
|Fusion[http://michaelbrundage.com/project/xbox-360-emulator/] ([[Xbox 360 Backward Compatibility]])
|
|Microsoft
|Xbox 360
|Proprietary
|
|-
|{{Maintained}}
|LLE/HLE Hybrid{{citation needed}}
|{{No}}
|Fission[http://www.ign.com/articles/2017/10/23/the-untold-story-of-xbox-one-backwards-compatibility] ([[Xbox One Backward Compatibility]])
|[http://www.xbox.com/en-US/xbox-one/backward-compatibility]
|Microsoft
|Xbox One
|Proprietary
|Announced at E3 2017. Said to be working similar to the 360 support in the Xbox One [https://youtu.be/x0NKP7-h_G0?t=8503]. The 360 support is probably ahead of time shader translation and runtime CPU translation [https://majornelson.com/podcast/584-xbox-one-backward-compatibility-turns-1/].
|}

== References and links == 

* [https://www.reddit.com/r/emulation/comments/6a958p/cxbx_reloaded_xbox_emulator_panzer_dragoon_orta/ Discussion about Xbox emulation and technical differences between [[Cxbx-Reloaded]] and [[XQEMU]]]